/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.fastpix.sdk.models.operations;

import io.fastpix.sdk.models.components.SimulcastRequest;
import io.fastpix.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class CreateSimulcastOfStreamRequestBuilder {

    private String streamId;
    private Optional<? extends SimulcastRequest> simulcastRequest = Optional.empty();
    private final SDKMethodInterfaces.MethodCallCreateSimulcastOfStream sdk;

    public CreateSimulcastOfStreamRequestBuilder(SDKMethodInterfaces.MethodCallCreateSimulcastOfStream sdk) {
        this.sdk = sdk;
    }

    public CreateSimulcastOfStreamRequestBuilder streamId(String streamId) {
        Utils.checkNotNull(streamId, "streamId");
        this.streamId = streamId;
        return this;
    }
                
    public CreateSimulcastOfStreamRequestBuilder simulcastRequest(SimulcastRequest simulcastRequest) {
        Utils.checkNotNull(simulcastRequest, "simulcastRequest");
        this.simulcastRequest = Optional.of(simulcastRequest);
        return this;
    }

    public CreateSimulcastOfStreamRequestBuilder simulcastRequest(Optional<? extends SimulcastRequest> simulcastRequest) {
        Utils.checkNotNull(simulcastRequest, "simulcastRequest");
        this.simulcastRequest = simulcastRequest;
        return this;
    }

    public CreateSimulcastOfStreamResponse call() throws Exception {

        return sdk.createSimulcastOfStream(
            streamId,
            simulcastRequest);
    }
}
