/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.fastpix.sdk.models.operations;

import io.fastpix.sdk.models.components.SimulcastUpdateRequest;
import io.fastpix.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class UpdateSpecificSimulcastOfStreamRequestBuilder {

    private String streamId;
    private String simulcastId;
    private Optional<? extends SimulcastUpdateRequest> simulcastUpdateRequest = Optional.empty();
    private final SDKMethodInterfaces.MethodCallUpdateSpecificSimulcastOfStream sdk;

    public UpdateSpecificSimulcastOfStreamRequestBuilder(SDKMethodInterfaces.MethodCallUpdateSpecificSimulcastOfStream sdk) {
        this.sdk = sdk;
    }

    public UpdateSpecificSimulcastOfStreamRequestBuilder streamId(String streamId) {
        Utils.checkNotNull(streamId, "streamId");
        this.streamId = streamId;
        return this;
    }

    public UpdateSpecificSimulcastOfStreamRequestBuilder simulcastId(String simulcastId) {
        Utils.checkNotNull(simulcastId, "simulcastId");
        this.simulcastId = simulcastId;
        return this;
    }
                
    public UpdateSpecificSimulcastOfStreamRequestBuilder simulcastUpdateRequest(SimulcastUpdateRequest simulcastUpdateRequest) {
        Utils.checkNotNull(simulcastUpdateRequest, "simulcastUpdateRequest");
        this.simulcastUpdateRequest = Optional.of(simulcastUpdateRequest);
        return this;
    }

    public UpdateSpecificSimulcastOfStreamRequestBuilder simulcastUpdateRequest(Optional<? extends SimulcastUpdateRequest> simulcastUpdateRequest) {
        Utils.checkNotNull(simulcastUpdateRequest, "simulcastUpdateRequest");
        this.simulcastUpdateRequest = simulcastUpdateRequest;
        return this;
    }

    public UpdateSpecificSimulcastOfStreamResponse call() throws Exception {

        return sdk.updateSpecificSimulcastOfStream(
            streamId,
            simulcastId,
            simulcastUpdateRequest);
    }
}
