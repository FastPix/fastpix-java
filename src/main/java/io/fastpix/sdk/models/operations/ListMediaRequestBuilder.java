/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.fastpix.sdk.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import io.fastpix.sdk.utils.LazySingletonValue;
import io.fastpix.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.Long;
import java.util.Optional;

public class ListMediaRequestBuilder {

    private Optional<Long> limit = Utils.readDefaultOrConstValue(
                            "limit",
                            "10",
                            new TypeReference<Optional<Long>>() {});
    private Optional<Long> offset = Utils.readDefaultOrConstValue(
                            "offset",
                            "1",
                            new TypeReference<Optional<Long>>() {});
    private Optional<? extends ListMediaOrderBy> orderBy = Utils.readDefaultOrConstValue(
                            "orderBy",
                            "\"desc\"",
                            new TypeReference<Optional<? extends ListMediaOrderBy>>() {});
    private final SDKMethodInterfaces.MethodCallListMedia sdk;

    public ListMediaRequestBuilder(SDKMethodInterfaces.MethodCallListMedia sdk) {
        this.sdk = sdk;
    }
                
    public ListMediaRequestBuilder limit(long limit) {
        Utils.checkNotNull(limit, "limit");
        this.limit = Optional.of(limit);
        return this;
    }

    public ListMediaRequestBuilder limit(Optional<Long> limit) {
        Utils.checkNotNull(limit, "limit");
        this.limit = limit;
        return this;
    }
                
    public ListMediaRequestBuilder offset(long offset) {
        Utils.checkNotNull(offset, "offset");
        this.offset = Optional.of(offset);
        return this;
    }

    public ListMediaRequestBuilder offset(Optional<Long> offset) {
        Utils.checkNotNull(offset, "offset");
        this.offset = offset;
        return this;
    }
                
    public ListMediaRequestBuilder orderBy(ListMediaOrderBy orderBy) {
        Utils.checkNotNull(orderBy, "orderBy");
        this.orderBy = Optional.of(orderBy);
        return this;
    }

    public ListMediaRequestBuilder orderBy(Optional<? extends ListMediaOrderBy> orderBy) {
        Utils.checkNotNull(orderBy, "orderBy");
        this.orderBy = orderBy;
        return this;
    }

    public ListMediaResponse call() throws Exception {
        if (limit == null) {
            limit = _SINGLETON_VALUE_Limit.value();
        }
        if (offset == null) {
            offset = _SINGLETON_VALUE_Offset.value();
        }
        if (orderBy == null) {
            orderBy = _SINGLETON_VALUE_OrderBy.value();
        }
        return sdk.listMedia(
            limit,
            offset,
            orderBy);
    }

    private static final LazySingletonValue<Optional<Long>> _SINGLETON_VALUE_Limit =
            new LazySingletonValue<>(
                    "limit",
                    "10",
                    new TypeReference<Optional<Long>>() {});

    private static final LazySingletonValue<Optional<Long>> _SINGLETON_VALUE_Offset =
            new LazySingletonValue<>(
                    "offset",
                    "1",
                    new TypeReference<Optional<Long>>() {});

    private static final LazySingletonValue<Optional<? extends ListMediaOrderBy>> _SINGLETON_VALUE_OrderBy =
            new LazySingletonValue<>(
                    "orderBy",
                    "\"desc\"",
                    new TypeReference<Optional<? extends ListMediaOrderBy>>() {});
}
